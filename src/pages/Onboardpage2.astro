---
import "../styles/global.css";
import OnboardLayout from "../layouts/OnboardLayout.astro";
import "@fontsource/kulim-park";
import "@fontsource/poppins";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import CustomSelect from "../components/dropdownmenu.tsx";

const handleSelectChange = (value: string, name: string) => {
  console.log(`${name}: ${value}`);
};

const nationalityOptions = [
  { label: "Pakistani", value: "pakistani" },
  { label: "Indian", value: "indian" },
  { label: "Bangladeshi", value: "bangladeshi" },
  { label: "British", value: "british" },
  { label: "Other", value: "other" },
];

const residenceOptions = [
  { label: "Pakistani", value: "pakistani" },
  { label: "Indian", value: "indian" },
  { label: "Bangladeshi", value: "bangladeshi" },
  { label: "British", value: "british" },
  { label: "Other", value: "other" },
];

const cityOptions = [
  { label: "Pakistani", value: "pakistani" },
  { label: "Indian", value: "indian" },
  { label: "Bangladeshi", value: "bangladeshi" },
  { label: "British", value: "british" },
  { label: "Other", value: "other" },
];

const maritalStatusOptions = [
  { label: "Single", value: "single" },
  { label: "Married", value: "married" },
  { label: "Divorced", value: "divorced" },
  { label: "Widowed", value: "widowed" },
];

const ageOptions = Array.from({ length: 83 }, (_, i) => ({
  label: `${18 + i}`,
  value: `${18 + i}`,
}));

const childCountOptions = [
  { label: "0", value: "0" },
  { label: "1", value: "1" },
  { label: "2", value: "2" },
  { label: "3", value: "3" },
  { label: "4", value: "4" },
  { label: "5", value: "5" },
];  

const weightOptions = Array.from({ length: 121 }, (_, i) => ({
  label: `${30 + i} kg`,
  value: `${30 + i}`,
}));

const heightOptions = Array.from({ length: 81 }, (_, i) => ({
  label: `${120 + i} cm`,
  value: `${120 + i}`,
}));

const bodyTypeOptions = [
  { label: "Slim", value: "slim" },
  { label: "Average", value: "average" },
  { label: "Athletic", value: "athletic" },
  { label: "Heavy", value: "heavy" },
];

const beardOptions = [
  { label: "Yes", value: "yes" },
  { label: "No", value: "no" },
];

const skinColorOptions = [
  { label: "Fair", value: "fair" },
  { label: "Medium", value: "medium" },
  { label: "Dark", value: "dark" },
];

const eyeColorOptions = [
  { label: "Brown", value: "brown" },
  { label: "Black", value: "black" },
  { label: "Blue", value: "blue" },
  { label: "Green", value: "green" },
];
---

<OnboardLayout>

    <div class="maindiv py-32">

        <div class="container flex justify-between items-center lg:max-w-6xl">
            <h4 class="text-black text-sm font-semibold lg:text-lg text-wrap">Profile Setup</h4>
            <img src="/welcome-uncle.svg" alt="uncle" class="hidden lg:block">
            <h4 class="text-black text-sm font-semibold lg:text-lg text-wrap">Step 2 of 4</h4>
        </div>

        <div class="container lg:z-10 lg:mt-[-8rem] lg:max-w-6xl mx-auto relative bg-muted border rounded-xl p-4">
            
            <h4 class="text-center text-2xl lg:text-4xl font-bold p-4 uppercase text-primary">Sign Up</h4>

            <div class="flex flex-col gap-12 p-4">
                <p class="text-secondary-foreground text-center lg:text-left text-xs lg:text-md font-semibold">Personal Details</p>

                <div class="flex flex-col gap-2">
                    <h6 class="text-primary text-sm lg:text-lg font-semibold">Date of Birth</h6>
                    <input type="date" placeholder="Please Select Your Date of Birth" class="border rounded-xl p-2">
                </div>

                <p class="text-secondary-foreground text-center lg:text-left text-xs lg:text-md font-semibold">Nationality & Residence</p>

                <div class="flex flex-wrap gap-6">
                    <div class="flex-1 min-w-[200px]">
                        <h6 class="text-primary text-sm lg:text-lg font-semibold mb-2">Nationality</h6>
                        <CustomSelect client:load name="nationality" placeholder="Select Nationality" options={nationalityOptions} onChange={(value) => handleSelectChange(value, "nationality")}/>
                    </div>

                    <div class="flex-1 min-w-[200px]">
                        <h6 class="text-primary text-sm lg:text-lg font-semibold mb-2">Residence</h6>
                        <CustomSelect client:load name="residence" placeholder="Select Residence" options={residenceOptions} onChange={(value) => handleSelectChange(value, "residence")}/>
                    </div>

                    <div class="flex-1 min-w-[200px]">
                        <h6 class="text-primary text-sm lg:text-lg font-semibold mb-2">City</h6>
                        <CustomSelect client:load name="city" placeholder="Select City" options={cityOptions} onChange={(value) => handleSelectChange(value, "city")}/>
                    </div>
                </div>


                <p class="text-secondary-foreground text-center lg:text-left text-xs lg:text-md font-semibold">Marital Status</p>
                <div class="flex flex-wrap gap-6">
                    <div class="flex-1 min-w-[200px]">
                        <h6 class="text-primary text-sm lg:text-lg font-semibold mb-2">Marital Status</h6>
                        <CustomSelect client:load name="maritalStatus" placeholder="Select Marital Status" options={maritalStatusOptions} onChange={(value) => handleSelectChange(value, "maritalStatus")}/>
                    </div>

                    <div class="flex-1 min-w-[200px]">
                        <h6 class="text-primary text-sm lg:text-lg font-semibold mb-2">Age</h6>
                        <CustomSelect client:load name="age" placeholder="Select Age" options={ageOptions} onChange={(value) => handleSelectChange(value, "age")}/>
                    </div>

                    <div class="flex-1 min-w-[200px]">
                        <h6 class="text-primary text-sm lg:text-lg font-semibold mb-2">Child Count</h6>
                        <CustomSelect client:load name="childCount" placeholder="Select Child Count" options={childCountOptions} onChange={(value) => handleSelectChange(value, "childCount")}/>
                    </div>
                </div>

                <p class="text-secondary-foreground text-center lg:text-left text-xs lg:text-md font-semibold">Looks & Appearance</p>

                {/* First row */}
                <div class="flex flex-wrap gap-6">
                    <div class="flex-1 min-w-[200px]">
                        <h6 class="text-primary text-sm lg:text-lg font-semibold mb-2">Height</h6>
                        <CustomSelect client:load name="height" placeholder="Select Height" options={heightOptions} onChange={(value) => handleSelectChange(value, "height")}/>
                    </div>

                    <div class="flex-1 min-w-[200px]">
                        <h6 class="text-primary text-sm lg:text-lg font-semibold mb-2">Weight</h6>
                        <CustomSelect client:load name="weight" placeholder="Select Weight" options={weightOptions} onChange={(value) => handleSelectChange(value, "weight")}/>
                    </div>

                    <div class="flex-1 min-w-[200px]">
                        <h6 class="text-primary text-sm lg:text-lg font-semibold mb-2">Body Type</h6>
                        <CustomSelect client:load name="bodyType" placeholder="Select Body Type" options={bodyTypeOptions} onChange={(value) => handleSelectChange(value, "bodyType")}/>
                    </div>
                </div>


                {/* Second row */}
                <div class="flex flex-wrap gap-6">
                    <div class="flex-1 min-w-[200px]">
                        <h6 class="text-primary text-sm lg:text-lg font-semibold mb-2">Beard</h6>
                        <CustomSelect client:load name="beard" placeholder="Select Beard" options={beardOptions} onChange={(value) => handleSelectChange(value, "beard")}/>
                    </div>

                    <div class="flex-1 min-w-[200px]">
                        <h6 class="text-primary text-sm lg:text-lg font-semibold mb-2">Eye Color</h6>
                        <CustomSelect client:load name="eyeColor" placeholder="Select Eye Color" options={eyeColorOptions} onChange={(value) => handleSelectChange(value, "eyeColor")}/>
                    </div>

                    <div class="flex-1 min-w-[200px]">
                        <h6 class="text-primary text-sm lg:text-lg font-semibold mb-2">Skin Color</h6>
                        <CustomSelect client:load name="skinColor" placeholder="Select Skin Color" options={skinColorOptions} onChange={(value) => handleSelectChange(value, "skinColor")}/>
                    </div>
                </div>                
            </div>

            <div id="btns" class="flex flex-col lg:flex-row gap-5 justify-between px-20 mt-20">
                <button class="lg:px-16 lg:py-2 py-2 px-10 max-w-fit mx-auto bg-secondary border border-primary text-sm lg:text-lg text-primary rounded-xl font-semibold"><a href="/Onboardpage1">Back</a></button>
                <button class="lg:px-16 lg:py-2 py-2 px-10 max-w-fit mx-auto bg-primary text-sm lg:text-lg text-secondary rounded-xl font-semibold"><a href="/Onboardpage3">Next</a></button>
              </div>      
        </div>
    </div>

    <div class="flex flex-col gap-4 justify-center">
        <button class="lg:px-8 px-6 max-w-fit mx-auto mt-10 text-sm lg:text-lg text-primary rounded-xl font-medium border border-primary bg-transparent flex items-center gap-2"><a href="/">Back to Home</a></button>
        <p class="text-center text-sm lg:text-lg text-primary font-medium">Already have an Account?<a href="/login" class="text-primary font-semibold"> Sign In</a> instead.</p>
      </div>
  
</OnboardLayout>
